// Generated by view binder compiler. Do not edit!
package com.redevrx.video_trimmer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.exoplayer2.ui.PlayerView;
import com.redevrx.video_trimmer.R;
import com.redevrx.video_trimmer.view.RangeSeekBarView;
import com.redevrx.video_trimmer.view.TimeLineView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TrimmerViewLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout container;

  @NonNull
  public final FrameLayout frameColor;

  @NonNull
  public final SeekBar handlerTop;

  @NonNull
  public final ImageView iconVideoPlay;

  @NonNull
  public final RelativeLayout layout;

  @NonNull
  public final RelativeLayout layoutSurfaceView;

  @NonNull
  public final TextView textTimeSelection;

  @NonNull
  public final RelativeLayout timeFrame;

  @NonNull
  public final RangeSeekBarView timeLineBar;

  @NonNull
  public final ConstraintLayout timeLineFrame;

  @NonNull
  public final TimeLineView timeLineView;

  @NonNull
  public final ImageView tvPlay;

  @NonNull
  public final PlayerView videoLoader;

  private TrimmerViewLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout container, @NonNull FrameLayout frameColor,
      @NonNull SeekBar handlerTop, @NonNull ImageView iconVideoPlay, @NonNull RelativeLayout layout,
      @NonNull RelativeLayout layoutSurfaceView, @NonNull TextView textTimeSelection,
      @NonNull RelativeLayout timeFrame, @NonNull RangeSeekBarView timeLineBar,
      @NonNull ConstraintLayout timeLineFrame, @NonNull TimeLineView timeLineView,
      @NonNull ImageView tvPlay, @NonNull PlayerView videoLoader) {
    this.rootView = rootView;
    this.container = container;
    this.frameColor = frameColor;
    this.handlerTop = handlerTop;
    this.iconVideoPlay = iconVideoPlay;
    this.layout = layout;
    this.layoutSurfaceView = layoutSurfaceView;
    this.textTimeSelection = textTimeSelection;
    this.timeFrame = timeFrame;
    this.timeLineBar = timeLineBar;
    this.timeLineFrame = timeLineFrame;
    this.timeLineView = timeLineView;
    this.tvPlay = tvPlay;
    this.videoLoader = videoLoader;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TrimmerViewLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TrimmerViewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.trimmer_view_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TrimmerViewLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout container = (RelativeLayout) rootView;

      id = R.id.frame_color;
      FrameLayout frameColor = ViewBindings.findChildViewById(rootView, id);
      if (frameColor == null) {
        break missingId;
      }

      id = R.id.handlerTop;
      SeekBar handlerTop = ViewBindings.findChildViewById(rootView, id);
      if (handlerTop == null) {
        break missingId;
      }

      id = R.id.iconVideoPlay;
      ImageView iconVideoPlay = ViewBindings.findChildViewById(rootView, id);
      if (iconVideoPlay == null) {
        break missingId;
      }

      id = R.id.layout;
      RelativeLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.layoutSurfaceView;
      RelativeLayout layoutSurfaceView = ViewBindings.findChildViewById(rootView, id);
      if (layoutSurfaceView == null) {
        break missingId;
      }

      id = R.id.textTimeSelection;
      TextView textTimeSelection = ViewBindings.findChildViewById(rootView, id);
      if (textTimeSelection == null) {
        break missingId;
      }

      id = R.id.timeFrame;
      RelativeLayout timeFrame = ViewBindings.findChildViewById(rootView, id);
      if (timeFrame == null) {
        break missingId;
      }

      id = R.id.timeLineBar;
      RangeSeekBarView timeLineBar = ViewBindings.findChildViewById(rootView, id);
      if (timeLineBar == null) {
        break missingId;
      }

      id = R.id.timeLineFrame;
      ConstraintLayout timeLineFrame = ViewBindings.findChildViewById(rootView, id);
      if (timeLineFrame == null) {
        break missingId;
      }

      id = R.id.timeLineView;
      TimeLineView timeLineView = ViewBindings.findChildViewById(rootView, id);
      if (timeLineView == null) {
        break missingId;
      }

      id = R.id.tvPlay;
      ImageView tvPlay = ViewBindings.findChildViewById(rootView, id);
      if (tvPlay == null) {
        break missingId;
      }

      id = R.id.videoLoader;
      PlayerView videoLoader = ViewBindings.findChildViewById(rootView, id);
      if (videoLoader == null) {
        break missingId;
      }

      return new TrimmerViewLayoutBinding((RelativeLayout) rootView, container, frameColor,
          handlerTop, iconVideoPlay, layout, layoutSurfaceView, textTimeSelection, timeFrame,
          timeLineBar, timeLineFrame, timeLineView, tvPlay, videoLoader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
